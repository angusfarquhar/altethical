
altethical[~gRPC]:
    @description =:
        |
        |altethical microservice
    @package = "altethical"
    @source_path = "api.proto"
    !type byclicksRequest[~empty]:
        @source_path = "api.proto"
        ...
    !type byimagesRequest[~empty]:
        @source_path = "api.proto"
        ...
    !type exampleRequest:
        @source_path = "api.proto"
        message <: string:
            @json_tag = "message"
            @rpcId = "1"
    !type exampleResponse:
        @source_path = "api.proto"
        message <: string:
            @json_tag = "message"
            @rpcId = "1"
    !type product:
        @source_path = "api.proto"
        image <: string:
            @json_tag = "image"
            @rpcId = "1"
        score <: float:
            @json_tag = "score"
            @rpcId = "4"
        title <: string:
            @json_tag = "title"
            @rpcId = "3"
        url <: string:
            @json_tag = "url"
            @rpcId = "2"
    !type reindexRequest:
        @source_path = "api.proto"
        message <: string:
            @json_tag = "message"
            @rpcId = "1"
    !type reindexResponse:
        @source_path = "api.proto"
        message <: string:
            @json_tag = "message"
            @rpcId = "1"
    !type searchRequest:
        @source_path = "api.proto"
        url <: string:
            @json_tag = "url"
            @rpcId = "1"
    !type searchResponse:
        @source_path = "api.proto"
        product <: sequence of product
    !type signupRequest:
        @source_path = "api.proto"
        url <: string:
            @json_tag = "url"
            @rpcId = "1"
    !type signupResponse:
        @source_path = "api.proto"
        message <: string:
            @json_tag = "message"
            @rpcId = "1"
    byclicks(input <: altethical.byclicksRequest)[~gRPC]:
        @description =:
            |        rpc signup(signupRequest) returns (signupResponse); // this is temporarily disabled because loading is done through config atm
        @source_path = "api.proto"
        return ok <: altethical.searchResponse
    byimages(input <: altethical.byimagesRequest)[~gRPC]:
        @description = ""
        @source_path = "api.proto"
        return ok <: altethical.searchResponse
    example(input <: altethical.exampleRequest)[~gRPC]:
        @description = " example is used to get which user is currently logged in "
        @source_path = "api.proto"
        return ok <: altethical.exampleResponse
    searchImage(input <: altethical.searchRequest)[~gRPC]:
        @description = ""
        @source_path = "api.proto"
        return ok <: altethical.searchResponse

